package org.rolson.emr.emrcycle1;
import java.time.LocalDateTime;

import java.time.format.DateTimeFormatter;
import java.util.Arrays;
import java.util.List;

import org.joda.time.DateTime;
import org.joda.time.format.DateTimeFormat;

import com.amazonaws.services.elasticmapreduce.model.*;

public class Workflow {
	public String name;
	public String appType;
	public String debugName; 
	public String dataSource;
	public String outputFolder;
	public String analysisJAR;
	public String mainClassInJAR;
	public String status;
	private StepConfig stepConfig;
	private ActionOnFailure actionOnFailure;
	private List<String> commandArgs;
	
	public Workflow(String workflowname)
	{
		defaultVariables();
		this.name = workflowname;
		commandArgs = Arrays.asList(dataSource,outputFolder);
	}
	public String getName()
	{
		return name;
	}
	public String getStatus()
	{
		return status;
	}
	public String getAppType()
	{
		return appType;
	}
	public List<String> getCommandArgs(){
		return commandArgs;
	}
	private void defaultVariables()
	{
		//setup for basic MapReduce job
		this.name = "MapReduce Station Counter";
		this.dataSource = "s3://rolyhudsontestbucket1/climateData/VV50.txt";
		this.outputFolder = "s3://rolyhudsontestbucket1/climateData/"+generateUniqueOutputName(this.name+"_output_", new DateTime());
		this.analysisJAR = "s3://rolyhudsontestbucket1/climateData/stationAnalysis.jar";
		this.debugName = "Hadoop MR NOAA Counting"; 
		this.mainClassInJAR = "org.rolson.mapreduce.mapreduce2.StationAnalysisDriver";
		this.actionOnFailure = ActionOnFailure.TERMINATE_CLUSTER;
		this.appType = "Hadoop";
	}
	public void monthlyResultsConfig()
	{
		this.name = "Monthly records totals";
		this.debugName = "Monthly records totals debug"; 
		this.dataSource = "s3://rolyhudsontestbucket1/climateData/VV50.txt";
		this.outputFolder = "s3://rolyhudsontestbucket1/climateData/"+generateUniqueOutputName(this.name+"_output_", new DateTime());
		this.analysisJAR = "s3://rolyhudsontestbucket1/climateData/monthlyrecords.jar";
		this.mainClassInJAR = "org.rolson.emr.groupStationByMonthYear.App";
		this.commandArgs = Arrays.asList(dataSource,outputFolder);
	}
	public void messageLogAgregator()
	{
		this.name = "Message log agregator";
		this.debugName = "Agregator debug"; 
		this.dataSource = "s3://rolyhudsontestbucket1/cookbookexamples/access_log_Jul95.txt";
		this.outputFolder = "s3://rolyhudsontestbucket1/cookbookexamples/"+generateUniqueOutputName(this.name+"_output_", new DateTime());
		this.analysisJAR = "s3://rolyhudsontestbucket1/cookbookexamples/messageSize.jar";
		this.mainClassInJAR = "org.rolson.emr.messageSize.App";
		this.commandArgs = Arrays.asList(dataSource,outputFolder);
	}
	public void sparkTestVariables()
	{
		Application app = new Application().withName("Spark");
		this.name = "Spark test";
		this.debugName = "Spark test debug"; 
		this.dataSource = "";
		this.outputFolder = ""+generateUniqueOutputName(this.name+"_output_", new DateTime());
		this.analysisJAR = "";
		this.mainClassInJAR = "";
		this.commandArgs = Arrays.asList(dataSource,outputFolder);
	}
	public static String generateUniqueOutputName(String prefix,DateTime timePoint)
	{
		
		org.joda.time.format.DateTimeFormatter fmt = DateTimeFormat.forPattern("yyyy_MM_dd_HH_mm_ss");
		String s = prefix+fmt.print(timePoint);
				//timePoint.format(formatter);
		return s;
	}
	private void setStepConfig()
	{
		this.stepConfig = new StepConfig()
	       .withName(this.debugName)
	       .withActionOnFailure(this.actionOnFailure)
	       .withHadoopJarStep(new HadoopJarStepConfig()
	           .withJar(this.analysisJAR)
	           .withArgs(this.commandArgs)
	           .withMainClass(this.mainClassInJAR));
	}
	public void setUpRequest()
	{
		setStepConfig();  
		
	}
}
